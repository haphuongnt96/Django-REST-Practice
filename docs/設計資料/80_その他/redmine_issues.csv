#,題名,親チケット,説明
6312,詳細画面の新規作成時、申請者は承認者に承認申請をすることができる,"","・申請ボタン押下すると、コメントを入力するポップアップ画面が表示される
　　一次承認者を申請者が選択する場合・・・コメントを入力するポップアップ画面に承認者を選択する検索ボタンがある
　　一次承認者を選択しない場合・・・申請依頼ボタンで承認ルートを取得する

　【申請依頼ボタン押下後】　　　　
承認ルートが表示される
通知先ボタンが表示される
申請したら申請者は申請内容を修正できないようにする
一次承認者のTOP画面の未承認に件数を追加する
申請内容の入力エラーチェックがおこなわれる⇒エラーがあればエラー表記する
コメントボタンが表示される⇒コメントがある場合は有と表示されなければ無と表示されている

　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　



　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　

"
6238,閲覧制限は、その時の閲覧権限区分で判断する,"","人財課であっても閲覧できる人を制限したりする。同様に各部署で発生する可能性がある。
申請部署と主管部署が閲覧できる。
主管部署のみ閲覧のみできる。
申請者と承認者が閲覧できる。
申請者と閲覧権限者のみ閲覧できる
閲覧権限者のみ閲覧ができる

現在は承認種類マスタで権限コードで制限している。"
6314,承認者の詳細画面で申請内容欄等は申請者が入力したものが表示されている,"","申請内容・・・申請者が登録した申請内容が表示されている―選択ボタンはなしで編集不可
申請部署・・・申請者が登録した申請部署が表示されている―編集不可
申請日時・・・申請者が申請した日時と時間がyyyymmddhhmmで表示されている
申請者・・・申請者名が表示されている

申請者が入力した申請内容を表示する
添付ファイルの内容確認ができる
承認者が編集するこはできない"
6266,TOP画面で条件を入力することで条件にあったレコードを表示させることができる,"","【絞り込みできる項目】
・申請内容	
・状況	
・申請者	
・申請部署	
・申請日	
・最終申請日	
・件名	
・物件	
・番号
・承認者
・承認日
・通知者
・承認対象のみ
・不在分
・閲覧権限
・
	
"
6316,承認者の詳細画面で承認することができる,"","承認ボタンがあり押下すると『承認しますか？』のポップアップ画面が表示される
承認ボタン押下で次承認者のTOP画面の未承認の件数が追加される"
6375,申請入力項目を保存する,6305,"* 入力項目を登録もしくは更新で保存する
** ステータスは本登録として保存すること"
6305,詳細画面で新規作成時、申請情報を登録することができる,"","申請情報欄
・申請内容・・・選択ボタンがあり申請内容を選択することができる⇒申請内容に選択した申請内容が表示される
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　選択した申請内容を変更したい場合は再度選択ボタンを押下することで変更できる
　　　　　　　　選択ボタン押下すると申請内容の文字の曖昧検索ができる（１文字以上で検索できる）
　　　　　　　　　　　　　　　　　　主幹部署で検索することができる
　　　　　　　　　　　　　　　　　　申請できない書類（電子化しない書類）を検索することができる⇒承認申請はできないようになっている　
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　雛形を確認することができる

・申請部署・・・ログイン者のメイン部署がデフォルト値として表示されている
　　　　　　　　プルダウンで部署が選択できるようになっている

・申請日時・・・申請ボタン押下した日時が表示されていて新規作成時は空白となっている
　　　　　　　　日付はyyyymmddhhmmで表示　　

・申請者・・・ログイン者名が表示されている
"
6202,【技術関連】リポジトリ準備,"","* リモートリポジトリ作成
* メンバーの招待
* 利用手順作成
* RedmineのwikiにURL貼り付け"
6286,申請を廃止しても過去参照は正しく行える,"",""
6371,承認者を追加できる,6293,"h2. 方向性

* 追加する承認者をつかんで順序を指定できる
** ただし*承認済みの承認者の前には追加できない
** 追加した承認者のみ削除できる
"
6372,通知者を追加できる,6293,"h2. 方向性

* 通知者を追加する
** 追加した通知者のみ削除できる
"
6373,申請内容を選択することができる,"","申請内容を検索することができる

検索パターンについては #6305 参照"
6244,最終承認後の取消機能　（見積外機能）,"",""
6374,申請区分により入力項目が切り替わる,6305,表示非表示／活性非活性のいずれかで制御する。
6205,【技術関連】開発標準土台作成,"","h2. どこに記載するか

* power point
* excel
* Redmine Wiki
* markdown file"
6301,Top画面に条件入力部分にクリアボタンを用意する,"",クリアボタン押下で条件が入力されているものすべてを消去する
6376,申請情報ヘッダを表示する,6305,"表示内容は #6305 参照

* 申請部署
* 申請日時（申請時に日時が入るので、申請日時が入っている場合のみ表示）
* 申請者"
6303,承認通知を一括で既読する機能,"",""
6275,Top画面から検索した申請内容から詳細画面に遷移し複写機能ボタンで過去のデータを申請内容に複写し申請することができる,"","・複写されたデータは再編集して申請することができる
"
6289,承認ルートマスタの変更を社内申請システムでおこなってもらう　見積外機能,"",""
6327,最終承認完了後に申請者の作業が発生する場合、作業確認用のチェックボックスやテキストを用意することができる,"",""
6292,承認者がコメントしたときに、申請者やそれまでの承認者にコメントされたことがわかるようにする　見積外,"",""
6231,ブルートフォース攻撃に対応する,"",同一IDに対して、パスワードを5回連続間違えた場合、アカウントをロックする
6232,管理者でユーザーのパスワードをリセット or 変更することができる,"",""
6233,ログインセッションは、8時間まで保持する,"",""
6246,人事異動で社員マスタの所属部署を変更することができる,"","所属変更する前に申請され承認者として選択されている場合は、そのまま承認可能とする
閲覧権限がなくなった場合は、エラーとしてわかるようにして申請者が取消後、再承認依頼することで対応する"
6222,【技術関連】レイヤー構成,"","* template
* view
* service
* model"
6234,利用者は、パスワードを自分で変更できる,"","旧パスワード確認入力テキストボックスを設け、新パスワード入力用確認用のテキストボックスを2か所設ける
新入力パスワードが一致していたら、ハッシュ化して保存を行う"
6247,各テーブルからデータを出力することができる,"",ACCESS等でODBC接続できるといいかなぁ
6320,詳細画面で通知者を確認することができる,"",通知者ボタンを設ける
6293,申請者・承認者は、承認者および通知者を追加できる,"","承認者の追加は、基本的に最終承認者以前にしか追加できないこと。
ただし、ルート未設定承認の場合は承認者をすべて追加することができる"
6213,【技術関連】システム監視検討,"","* アプリケーションエラーログ監視
* アクセス制限オーバー監視
* ストレージ容量監視
* AWS費用監視
* 監視通知はメール？"
6235,退職者は、ログインできないようにする,"",""
6256,ログイン者が申請者の場合、自分が関係するものをTOP画面で件数の確認することができる,"","・申請中・・・ログイン者が申請した件数が表示されている
・差戻し・・・ログイン者が申請したものが承認者によって否認された件数が表示されている
・下書き・・・ログイン者が下書き保存している件数が表示されている
・承認通知・・ログイン者が申請したものが承認完了した通知の件数が表示されている"
6268,詳細画面に戻るボタン作成,"",戻るボタン押下でTOP画面に戻る
6270,詳細画面にログアウトボタンがある,"",ログアウトボタン押下でログイン画面が表示される
6294,承認後にしないといけない作業のマニュアルを表示することができる,"",""
6245,添付したExcelファイルがサーバー側にある情報と端末での情報がことなることが発生しないようにする,"",""
6242,社員の姓名変更に対応できる,"","履歴は、姓名の変更により変わることは問題ない。
社員番号が変更になる場合がある（出向者定年退職時、この時は別として扱うことでOK）"
6321,詳細画面で最終承認完了後に申請者が申請取消したい場合に取消処理できるようにする,"","最終承認者が承認完了したら表示されるボタン
最終承認完了後に申請者が申請取消したい場合に使用する

ステータス変更と、承認者たちに取り消されたことの通知をする"
6319,承認者は詳細画面で承認取消することができる,"","承認したが次承認者が承認するまでの間承認を取り消すことができる
Top画面の未承認件数を追加する
次承認の未承認件数を減らす"
6237,利用者はログアウトができるようにする。ログアウト後は、ログイン画面に遷移する。,"","戻るボタンでもログアウト後は表示不可になっていること
"
6257,TOP画面から申請内容の新規登録することができる,"",新規作成時に詳細画面に遷移する
6269,詳細画面でログイン者名が表示されている,"",""
6309,詳細画面で印刷することができる,"","詳細画面で印刷ボタンがあり、Excel形式でもPDF形式でも申請内容を印刷することができる
システム管理者によってどこになにを印字するか編集できるようにする"
6295,承認者が同一承認階層にある場合は、必要承認者数が承認されるまで次の承認段階にいかないようにする,"",""
6307,詳細画面にCSV出力ボタンがある,"",申請内容をCSV出力することができる
6243,申請内容によって変わる部分で、契約先マスタ登録で1マンションでN人数の申請をする場合があり、N人数登録申請することを可能とする,"",""
6313,承認者の詳細画面で承認状況欄には承認ルートが表示されている,"",差戻されて再度承認依頼されてきたものは前回承認ルートも表示される
6263,TOP画面にログアウトボタンがある,"",押下されるとログイン画面になる
6271,新規作成時の詳細画面の承認状況欄は空白となっている,"",""
6279,詳細画面に通知を確認完了するための確認ボタンがある,"","申請者・差戻しの通知
　　　・承認完了の通知

承認者・承認済（申請取消）の通知
　　　・不在の通知

通知者・承認の通知"
6282,データ補正が管理者で実行できる,"",""
6296,代理承認者を社員ごとに設定することができる,"","基本的に代理承認者は不要。
ただし最終承認者が休みの場合、代理承認者をつけることで対応する"
6300,Top画面に条件を入力後の検索ボタンを用意し、過去分のレコードも確認できるようにする,"",""
6208,【技術関連】開発環境構築手順作成,"","h1. 想定環境

* Python3.8
** Python仮想環境は？
*** Virtualenv
*** Pipenv
*** Conda
* PyCharm Community
* docker
* PostgreSQL
* A5:SQL
* Git
* GitExtensions
"
6209,【技術関連】開発用DBコンテナ準備,"","h1. 環境想定

* docker + PostgreSQL
* データファイル自動投入
* ソースコードとして管理
* 利用方法はmarkdownで記載"
6260,申請者はTOP画面から２クリックで申請した分の状況を確認することができる,"",①申請中の件数をクリック⇒②表示された確認したいレコードをクリック
6272,新規作成時の詳細画面には下書き保存ボタンがある,"","一時保存ができる
一時保存した場合はTop画面の下書きに件数が加算される"
6280,社内申請以外に機能を追加していくことができる。,"",機能追加の手順を確認
6310,申請の最終承認完了後も添付ファイルを追加することができる　9月2日プロジェクトで確認するまで保留,"",ただし、既存の添付ファイルの変更、削除は不可とする
6311,見積外　添付ファイルの押印申請をすることができる　9月2日にプロジェクトで確認予定,"","押印申請を承認されることで押印請求簿ファイルが作成される
押印申請時に必要な印鑑を選択することができる

※押印申請が必要なものがあるか（この機能が必要か）プロジェクトへ確認が必要"
6317,承認者は承認画面で申請内容を否認することができる,"","『差戻しますか？』ポップアップ画面が表示される
否認ボタン押下で申請者のTOP画面の差戻し件数が追加される"
6261,申請者はTOP画面から２クリックで差戻しされたものを確認することができる,"",①差戻しの件数をクリック⇒②表示された確認したいレコードをクリック
6273,下書き保存したものを編集するときは、削除ボタンがあり削除することができる,"",一時保存していた下書きを物理的削除することができる
6281,AWSのデータ退避ができる,"",テーブルが巨大化したときと、添付ファイルについても同様
6284,AWSの環境構築方法を覚える,"",Redmineの社内ネットワークでのクラウド化で、事務部門での利用を検討できる
6315,承認者の詳細画面にコメントボタンを表示する,"","承認者はコメントを入力することができる
申請者や他の承認者のコメントを確認することができる
部署名役職名氏名等が記載されていて誰か記入したか確認できる
再申請などで前回の記入のコメントも確認することができる
コメントボタン横に有・無表示がある"
6283,ミドルウェア・ソフトウェア・OS等、使用しているソフトウェアのアップデートとセキュリティ対策および動作検証方法,"",アップデート時の動作検証方法
6210,【技術関連】Django関連利用ライブラリの整理,"","* ""Django REST"":https://www.django-rest-framework.org/
* ""Django concurrency"":https://django-concurrency.readthedocs.io/
* ""Vue.js"":https://jp.vuejs.org/
* ""Bootstrap"":https://getbootstrap.com/

導入するバージョンを含め開発標準資料に記載する。"
6211,【技術関連】Git運用ルール整理,"","""Git-Flow"":https://nvie.com/posts/a-successful-git-branching-model/ を少しカスタマイズして採用する予定。

h2. 検討項目

* 利用ブランチ
** main
** develop
** feature
** hot-fix
* コミットコメントルール
* バージョニングルール（タグ名）

手順を作成する。"
6252,TOP画面に管理者からのお知らせ通知を表示する,"",""
6255,TOP画面にログイン者氏名が表示されている,"",""
6262,申請者はTOP画面から２クリックで下書きを呼び出すことができる,"",①下書きの件数をクリック⇒②表示された確認したいレコードをクリック
6287,アジャイル開発型での開発手順を把握する,"","今後、社内でアプリの追加や機能追加をおこなうさいの標準モデルとして利用する

マイグレーションが必要な場合のバックアップ方法と手順
テスト環境と本番環境のデプロイやデータ移行方法"
6212,【技術関連】ログ出力方針,"","* 出力内容
* ログレベル
* 出力先ファイル（パスとファイル名）
* 出力タイミング
* イベントの前後は自動出力

インフラとして出力するログはある？"
6229,ログインするときには、IDとPASSで認証をする,"","IDとパスが合致しないときは、エラーとする
IDは社員番号7桁
PASSは、8桁以上　英数字記号の３種類以上使用

ログインできたらTop画面へ遷移すること
パスワードは、ハッシュ値で持ち管理者でも把握できないようにする"
6239,管理組合マスタやその他BiシステムからCSVで出力したのものを取り込みできるようにする。,"","理想は、APIかBiシステムが更新の時、CSVを自動転送し、自動で取込みする。
チョー理想"
6241,社員は複数の部署や課に所属することができる。,"","事業部-部-課-グループ
部署-課-グループ
という事業部に所属する部署と、事業部に所属しない部があり。

社員所属と主管部署で使用する"
6258,ログイン者が承認者の場合、自分が関係するものをTOP画面で確認することができる,"","・未承認・・・ログイン者で承認待ちになっている件数が表示されている
・未承認（順番待ち）・・・ログイン者が承認すべき件数が表示されているがまだ承認する順番にきていない件数が表示されている
・承認済（未完了分）・・・ログイン者が承認したもので最終承認完了まで至っていない件数が表示されている
・承認済（申請取消）・・・ログイン者が承認したレコードが申請者によって申請取消が行われた件数が表示されている
・不在通知・・・ログイン者の承認予定レコードがスキップされた件数が表示されている
"
6259,ログイン者が通知者に該当の場合、その通知をTOP画面で確認することができる,"",・承認通知・・・ログイン者が承認通知対象者に設定されている場合、最終承認されたら件数を表示される
6274,申請者が申請したら申請取消ボタンを表示させる,"","・最終承認者が承認するまでの間、申請者は申請取消ボタンで申請を取り消すことができる
・申請取消すると再度申請することができるようになる
・申請者は再編集できるようになる
・申請取消するとそれまでに承認していた承認者に取消の通知をする
"
6285,同一申請マスタの申請内容部分で、項目が追加になったり削除になっても過去分が正しく表示させることできる,"",""
6288,社内申請と外部システムとの連携,"","他のシステムからデータを受け取り承認後、また承認データを戻すなんてできたら最高

想いを書きました"
6291,承認後は、添付されているファイルは削除および変更ができないようにする,"","申請内容については、現在、承認者で訂正印で修正していることも多数ある。
承認時にロックすることが本当にいいのか検討が必要"
6298,承認は、前承認者が承認していなくても承認ができ、間の人は不在として通知がされる,"","最終承認者までスキップすることができる
承認者　A承認済み⇒B現在承認者⇒C次承認者⇒D最終承認者　この状態で最終承認者が承認した場合は、Cは不在通知で処理し、最終承認がされている状態とする。

飛び越した承認者のTOP画面に不在通知の件数を加える"
6370,TOP画面で関係する申請のコメントがあることを知らせる,"","* 表示形式 : 「コメント 3」など未読のコメントがある申請の数を表示する
* 詳細画面のコメントを開くことで既読とします。"
6366,開発標準資料に実装方法を記載,6207,""
6207,【技術関連】Vue.jsの使い方まとめ,"","* Vue.jsとdjangoを組み合わせるサンプルを作成
* 開発標準資料に実装方法を記載"
6365,Vue.jsとdjangoを組み合わせるサンプルを作成,6207,""
6217,【技術関連】インフラ構成検討,"","利用するAWSサービスと構成を作成する。
"
6369,申請項目マスタより雛形として表示する,6306,""
6368,申請項目をマスタ管理する,6306,"* CRUD管理できること
* 項目によっては選択肢が管理できること（プルダウン表示）"
6306,詳細画面で新規作成時、申請内容を登録したら雛形が表示される,"","・申請情報欄の申請内容を選択するまでは空白である
・雛形が表示されたら記入例が表示されている
・金額入力欄や金額表示されているものはカンマ表示されるようになっている
・添付ファイルをアップロードすることができる⇒データ量どのくらいまで？
　　　　　　　　　　　　　　　　　　　　　　　申請するまでの間、編集することができる（削除や追加）
　　　　　　　　　　　　　　　　　　　　　　　"
